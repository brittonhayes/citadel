// Code generated by goa v3.2.6, DO NOT EDIT.
//
// incidents go-kit HTTP server encoders and decoders
//
// Command:
// $ goa gen citadel/design

package server

import (
	"citadel/gen/http/incidents/server"
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	goahttp "goa.design/goa/v3/http"
)

// EncodeFindResponse returns a go-kit EncodeResponseFunc suitable for encoding
// incidents find responses.
func EncodeFindResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeFindResponse(encoder)
}

// DecodeFindRequest returns a go-kit DecodeRequestFunc suitable for decoding
// incidents find requests.
func DecodeFindRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeFindRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeListAllResponse returns a go-kit EncodeResponseFunc suitable for
// encoding incidents list all responses.
func EncodeListAllResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeListAllResponse(encoder)
}

// DecodeListAllRequest returns a go-kit DecodeRequestFunc suitable for
// decoding incidents list all requests.
func DecodeListAllRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeListAllRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}
