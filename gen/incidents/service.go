// Code generated by goa v3.2.6, DO NOT EDIT.
//
// incidents service
//
// Command:
// $ goa gen citadel/design

package incidents

import (
	"context"
)

// The incident service handles the creation and querying of security incidents
type Service interface {
	// Find implements find.
	Find(context.Context, *FindPayload) (res *Incident, err error)
	// ListAll implements list all.
	ListAll(context.Context, *LimitPayload) (res []*Incident, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "incidents"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"find", "list all"}

// FindPayload is the payload type of the incidents service find method.
type FindPayload struct {
	// Unique ID of the incident
	ID uint64
}

// Incident is the result type of the incidents service find method.
type Incident struct {
	// Unique ID of the incident
	ID *uint64
	// Date the incident occurred
	Date *string
	// Date the incident occurred
	DateClosed *string
	// Permissions associated with incident
	Permissions *string
	// The severity of the incident
	Severity *int
	// The short title of the incident
	Title *string
	// The detailed description of the incident
	Summary *string
	// The scope of impact of this incident
	Scope *string
	// What group or individual caused the initial incident
	ResponsibleParty *string
	// A list of the affected customers
	AffectedCustomers []string
	// The original cause of the incident
	RootCause *string
	// The slack channel for incident discussions
	SlackChannel *string
	// When the incident was submitted
	CreatedAt *string
	// When the incident was last updated
	UpdatedAt *string
}

// LimitPayload is the payload type of the incidents service list all method.
type LimitPayload struct {
	// Limit the number of results
	Limit *int32
}

// No incident matched given criteria
type NoMatch string

// Error returns an error description.
func (e NoMatch) Error() string {
	return "No incident matched given criteria"
}

// ErrorName returns "no_match".
func (e NoMatch) ErrorName() string {
	return "no_match"
}
