// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/brittonhayes/citadel/vulnerability/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	GetEndpoint    endpoint.Endpoint
	ListEndpoint   endpoint.Endpoint
	AddEndpoint    endpoint.Endpoint
	UpdateEndpoint endpoint.Endpoint
	DeleteEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.VulnerabilityService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		AddEndpoint:    MakeAddEndpoint(s),
		DeleteEndpoint: MakeDeleteEndpoint(s),
		GetEndpoint:    MakeGetEndpoint(s),
		ListEndpoint:   MakeListEndpoint(s),
		UpdateEndpoint: MakeUpdateEndpoint(s),
	}
	for _, m := range mdw["Get"] {
		eps.GetEndpoint = m(eps.GetEndpoint)
	}
	for _, m := range mdw["List"] {
		eps.ListEndpoint = m(eps.ListEndpoint)
	}
	for _, m := range mdw["Add"] {
		eps.AddEndpoint = m(eps.AddEndpoint)
	}
	for _, m := range mdw["Update"] {
		eps.UpdateEndpoint = m(eps.UpdateEndpoint)
	}
	for _, m := range mdw["Delete"] {
		eps.DeleteEndpoint = m(eps.DeleteEndpoint)
	}
	return eps
}
